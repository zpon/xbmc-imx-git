diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Video/OpenMaxVideo.cpp b/xbmc/cores/dvdplayer/DVDCodecs/Video/OpenMaxVideo.cpp
index 87e90ba..623fd55 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Video/OpenMaxVideo.cpp
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Video/OpenMaxVideo.cpp
@@ -65,13 +65,13 @@ using namespace KODI::MESSAGING;
 #define OMX_VC1_DECODER         "OMX.Nvidia.vc1.decode"
 
 // EGL extension functions
-static PFNEGLCREATEIMAGEKHRPROC eglCreateImageKHR;
-static PFNEGLDESTROYIMAGEKHRPROC eglDestroyImageKHR;
+static PFNEGLCREATEIMAGEKHRPROC eglCreateImageKHR2;
+static PFNEGLDESTROYIMAGEKHRPROC eglDestroyImageKHR2;
 
 #if defined(EGL_KHR_reusable_sync)
-static PFNEGLCREATESYNCKHRPROC eglCreateSyncKHR;
-static PFNEGLDESTROYSYNCKHRPROC eglDestroySyncKHR;
-static PFNEGLCLIENTWAITSYNCKHRPROC eglClientWaitSyncKHR;
+static PFNEGLCREATESYNCKHRPROC eglCreateSyncKHR2;
+static PFNEGLDESTROYSYNCKHRPROC eglDestroySyncKHR2;
+static PFNEGLCLIENTWAITSYNCKHRPROC eglClientWaitSyncKHR2;
 #endif
 
 #define GETEXTENSION(type, ext) \
@@ -445,8 +445,8 @@ void COpenMaxVideo::ReleaseBuffer(OpenMaxVideoBuffer* releaseBuffer)
 
 #if defined(EGL_KHR_reusable_sync)
   if (buffer->eglSync) {
-    eglClientWaitSyncKHR(m_egl_display, buffer->eglSync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, 1*1000*1000*1000);
-    eglDestroySyncKHR(m_egl_display, buffer->eglSync);
+    eglClientWaitSyncKHR2(m_egl_display, buffer->eglSync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, 1*1000*1000*1000);
+    eglDestroySyncKHR2(m_egl_display, buffer->eglSync);
     buffer->eglSync = 0;
   }
 #endif
@@ -715,22 +715,22 @@ void OpenMaxDeleteTextures(void *userdata)
   EGLDisplay eglDisplay = eglGetCurrentDisplay();
   EGLContext eglContext = eglGetCurrentContext();
 
-  if (!eglDestroyImageKHR)
+  if (!eglDestroyImageKHR2)
   {
-    GETEXTENSION(PFNEGLDESTROYIMAGEKHRPROC, eglDestroyImageKHR);
+    GETEXTENSION(PFNEGLDESTROYIMAGEKHRPROC, eglDestroyImageKHR2);
   }
 
   DeleteImageInfo *deleteInfo = (DeleteImageInfo*)userdata;
 
 #if defined(EGL_KHR_reusable_sync)
   if (deleteInfo->egl_sync) {
-    eglClientWaitSyncKHR(eglDisplay, deleteInfo->egl_sync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, 1*1000*1000*1000);
-    eglDestroySyncKHR(eglDisplay, deleteInfo->egl_sync);
+    eglClientWaitSyncKHR2(eglDisplay, deleteInfo->egl_sync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, 1*1000*1000*1000);
+    eglDestroySyncKHR2(eglDisplay, deleteInfo->egl_sync);
   }
 #endif
 
   // destroy egl_image
-  eglDestroyImageKHR(eglDisplay, deleteInfo->egl_image);
+  eglDestroyImageKHR2(eglDisplay, deleteInfo->egl_image);
   // free texture
   glDeleteTextures(1, &deleteInfo->texture_id);
 
@@ -784,13 +784,13 @@ OMX_ERRORTYPE COpenMaxVideo::AllocOMXOutputEGLTextures(void)
 {
   OMX_ERRORTYPE omx_err;
 
-  if (!eglCreateImageKHR)
+  if (!eglCreateImageKHR2)
   {
-    GETEXTENSION(PFNEGLCREATEIMAGEKHRPROC,  eglCreateImageKHR);
+    GETEXTENSION(PFNEGLCREATEIMAGEKHRPROC,  eglCreateImageKHR2);
 #if defined(EGL_KHR_reusable_sync)
-    GETEXTENSION(PFNEGLCREATESYNCKHRPROC, eglCreateSyncKHR);
-    GETEXTENSION(PFNEGLDESTROYSYNCKHRPROC, eglDestroySyncKHR);
-    GETEXTENSION(PFNEGLCLIENTWAITSYNCKHRPROC, eglClientWaitSyncKHR);
+    GETEXTENSION(PFNEGLCREATESYNCKHRPROC, eglCreateSyncKHR2);
+    GETEXTENSION(PFNEGLDESTROYSYNCKHRPROC, eglDestroySyncKHR2);
+    GETEXTENSION(PFNEGLCLIENTWAITSYNCKHRPROC, eglClientWaitSyncKHR2);
 #endif
   }
 
@@ -842,7 +842,7 @@ OMX_ERRORTYPE COpenMaxVideo::AllocOMXOutputEGLTextures(void)
       glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
 
     // create EGLImage from texture
-    egl_buffer->egl_image = eglCreateImageKHR(
+    egl_buffer->egl_image = eglCreateImageKHR2(
       m_egl_display,
       m_egl_context,
       EGL_GL_TEXTURE_2D_KHR,
